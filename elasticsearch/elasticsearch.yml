# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please see the documentation for further information on configuration options:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html>
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
# cluster.name: my-application
#
cluster.name: IT-ES1

# Allows to perform a check to prevent allocation of multiple instances of the same shard on 
# a single host, based on host name and host address. 
# Defaults to false, meaning that no check is performed by default. 
# This setting only applies if multiple nodes are started on the same machine.
#
# cluster.routing.allocation.same_shard.host: true

# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
# node.name: node-1
#
# Add custom attributes to the node:
#
# node.rack: r1
#
node.name: "IT-ES1-MD1"

node.master: true
node.data: true
node.size: big

# ----------------------------------- Index ------------------------------------
#
# You can set a number of options (such as shard/replica options, mapping
# or analyzer definitions, translog settings, ...) for indices globally,
# in this file.
#
action.auto_create_index: true
index.number_of_shards: 2
index.number_of_replicas: 1
index.unassigned.node_left.delayed_timeout: 5m

# Recommended for HDD, disable for SSD
#index.merge.scheduler.max_thread_count: 1

# Default to 20mb, increase to 100-200mb for SSD
indices.store.throttle.max_bytes_per_sec : 100mb

# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
# path.data: /path/to/data
#
# Path to log files:
#
# path.logs: /path/to/logs
#
path.data: D:/ESData/IT-ES1-MD1

# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
bootstrap.mlockall: true

#
# Make sure that the `ES_HEAP_SIZE` environment variable is set to about half the memory
# available on the system and that the owner of the process is allowed to use this limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
# network.host: 192.168.0.1
#
# Set a custom port for HTTP:
#
# http.port: 9200
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html>
#
# network.bind: 0.0.0.0
network.bind_host: 0.0.0.0
http.port: 9200

network.publish_host: 172.30.29.239
transport.tcp.port: 9300

# Allow ElasticHQ to connect
http.cors.enabled: true
http.cors.allow-origin: "*"

# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
# gateway.recover_after_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html>
#
# Protect against accidental close/delete operations
# on all indices. You can still close/delete individual
# indices
action.disable_close_all_indices: true
action.disable_delete_all_indices: true
action.disable_shutdown: true

#---------------------------------- Recovery Throttling ----------------------------------
#
# These settings allow to control the process of shards allocation between
# nodes during initial recovery, replica allocation, rebalancing,
# or when adding and removing nodes.
#
# Set the number of concurrent recoveries happening on a node:
#
# 1. During the initial recovery
#
# cluster.routing.allocation.node_initial_primaries_recoveries: 4
#
# 2. During adding/removing nodes, rebalancing, etc
#
# cluster.routing.allocation.node_concurrent_recoveries: 2
#
# Set to throttle throughput when recovering (eg. 100mb, by default 20mb):
#
indices.recovery.max_bytes_per_sec: 100mb
cluster.routing.allocation.node_initial_primaries_recoveries: 4
cluster.routing.allocation.node_concurrent_recoveries: 10

# Set to limit the number of open concurrent streams when
# recovering a shard from a peer:
#
# indices.recovery.concurrent_streams: 5

# --------------------------------- Discovery ----------------------------------
#
# Elasticsearch nodes will find each other via unicast, by default.
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
# discovery.zen.ping.unicast.hosts: ["host1", "host2"]
#
# Prevent the "split brain" by configuring the majority of nodes (total number of nodes / 2 + 1):
#
# discovery.zen.minimum_master_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html>
#
#discovery.zen.minimum_master_nodes: 1
#discovery.zen.ping.timeout: 1m
#discovery.zen.ping.unicast.hosts: ["172.30.29.239:9300"]

# --------------------------------- GC Logging ---------------------------------
#
#monitor.jvm.gc.young.warn: 1000ms
#monitor.jvm.gc.young.info: 700ms
#monitor.jvm.gc.young.debug: 400ms

#monitor.jvm.gc.old.warn: 10s
#monitor.jvm.gc.old.info: 5s
#monitor.jvm.gc.old.debug: 2s

# ---------------------------------- Various -----------------------------------
#
# Disable starting multiple nodes on a single system:
#
# node.max_local_storage_nodes: 1
#
# Require explicit names when deleting indices:
#
# action.destructive_requires_name: true
